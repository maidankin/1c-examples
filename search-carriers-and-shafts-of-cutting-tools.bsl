//	***	общие методы работы с Носителями Инструментов
Функция ВыполнитьПроверкуКоличестваЗаполненныхПараметров(Знач Инструмент, Знач Носитель1, Знач Носитель2) Экспорт
	Результат = 0;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПараметрыИнструментов.Значение) КАК Значение
	|ИЗ
	|	РегистрСведений.ПараметрыИнструментов КАК ПараметрыИнструментов
	|ГДЕ
	|	ПараметрыИнструментов.Инструмент = &Инструмент
	|	И (ПараметрыИнструментов.Настройка.Носитель = &Носитель1
	|			ИЛИ ПараметрыИнструментов.Настройка.Носитель = &Носитель2)");
	Запрос.УстановитьПараметр("Инструмент", Инструмент);	
	Запрос.УстановитьПараметр("Носитель1", Носитель1);
	Запрос.УстановитьПараметр("Носитель2", Носитель2);	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Значение;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьЗначениеПоИнструментуНоситель(Знач Инструмент, Знач Носитель) Экспорт
	Результат = 0;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПараметрыИнструментов.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ПараметрыИнструментов КАК ПараметрыИнструментов
	|ГДЕ
	|	ПараметрыИнструментов.Настройка.Носитель = &Носитель
	|	И ПараметрыИнструментов.Инструмент = &Инструмент");
	Запрос.УстановитьПараметр("Инструмент", Инструмент);	
	Запрос.УстановитьПараметр("Носитель", Носитель);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Значение;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьИнструментПоЗначениюНоситель(Знач Значение, Знач Носитель) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыИнструментов.Инструмент.Ссылка КАК Ссылка,
	|	ПараметрыИнструментов.Инструмент.Родитель КАК Родитель,
	|	ПараметрыИнструментов.Инструмент.Наименование КАК Инструмент
	|ИЗ
	|	РегистрСведений.ПараметрыИнструментов КАК ПараметрыИнструментов
	|ГДЕ
	|	ПараметрыИнструментов.Значение = &Значение
	|	И ПараметрыИнструментов.Настройка.Носитель = &Носитель");	
	Запрос.УстановитьПараметр("Значение", Значение);
	Запрос.УстановитьПараметр("Носитель", Носитель);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьИнструментПоЗначениюДиапазонНоситель(Знач Значение, Знач Носитель, Знач НосительДипазон1, Знач НосительДипазон2) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	внутр.Ссылка КАК Ссылка,
	|	внутр.Родитель КАК Родитель,
	|	внутр.Инструмент КАК Инструмент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПараметрыИнструментов.Инструмент.Ссылка КАК Ссылка,
	|		ПараметрыИнструментов.Инструмент.Родитель КАК Родитель,
	|		ПараметрыИнструментов.Инструмент.Наименование КАК Инструмент,
	|		ПараметрыИнструментов.Значение КАК Значение,
	|		ПараметрыИнструментов1.Значение КАК Значение1
	|	ИЗ
	|		РегистрСведений.ПараметрыИнструментов КАК ПараметрыИнструментов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыИнструментов КАК ПараметрыИнструментов1
	|			ПО ПараметрыИнструментов.Инструмент = ПараметрыИнструментов1.Инструмент
	|				И (ПараметрыИнструментов1.Настройка.Носитель = &НосительДипазон2)
	|	ГДЕ
	|		ПараметрыИнструментов.Настройка.Носитель = &НосительДипазон1) КАК внутр
	|ГДЕ
	|	внутр.Значение < &Значение
	|	И внутр.Значение1 >= &Значение");
	
	Результат = ПолучитьИнструментПоЗначениюНоситель(Значение, Носитель);
	
	Если ТипЗнч(Значение) = Тип("Число") Тогда
		Запрос.УстановитьПараметр("НосительДипазон1", НосительДипазон1);
		Запрос.УстановитьПараметр("НосительДипазон2", НосительДипазон2);
		Запрос.УстановитьПараметр("Значение", Значение);
		времТаб = Запрос.Выполнить().Выгрузить();
		Для Каждого стр Из времТаб Цикл 
			Если Результат.Найти(стр.Ссылка, "Ссылка") = Неопределено Тогда
				ЗаполнитьЗначенияСвойств(Результат.Добавить(), стр);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;		

	Возврат Результат;
КонецФункции

//  *** Реализация алгоритма поиска носителей для вала
Процедура КоманднаяПанельСправочникСписокНаЧтоМожноУстановитьЭтотЭлемент(Кнопка)
	РезультатПоиска.Очистить();
		
	Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока <> Неопределено Тогда
		текЭлем = ЭлементыФормы.СправочникСписок.ТекущаяСтрока.Ссылка;
		
		//	***	НА ЧТО можно установить - смотрим параметры "вал" "отверстие" (если заполнены оба то выдать ошибку - "Задано две посадки для установки В ДРУГОЙ элемент") 		
		РезультатПроверки = МетодыИнструментов.ВыполнитьПроверкуКоличестваЗаполненныхПараметров(текЭлем, Перечисления.ЗначенияНосителя.Вал, Перечисления.ЗначенияНосителя.Отверстие);
		
		Если РезультатПроверки >= 2 Тогда
			Предупреждение("Задано две посадки для установки В ДРУГОЙ элемент!");
			Возврат;
		ИначеЕсли РезультатПроверки = 1 Тогда
			//	***	по ним ищем инструменты вал носитель / отверстие носитель (если был вал то ищем отверстие, т.е. наоборот) с таким же значением
			//	***	если ищем по "вал", то отверстие носитель еще может быть в диапазоне > Отверстие (носитель) мин и <= Отверстие (носитель) макс. 
			ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.Вал);
			Если ЗначениеНосителяИнструмента = 0 Тогда				
				ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.Отверстие);
				Если ЗначениеНосителяИнструмента <> 0 Тогда
					РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.ВалНоситель)
				КонецЕсли;
			Иначе
				РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюДиапазонНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.ОтверстиеНоситель, Перечисления.ЗначенияНосителя.ОтверстиеНосительМин, Перечисления.ЗначенияНосителя.ОтверстиеНосительМакс);	
			КонецЕсли;
		ИначеЕсли РезультатПроверки = 0 Тогда
			//	*** если вал/отверстие нет у элемента, тогда ищем по вал (мат)
			//	***	если ищем по "вал мат", то отверстие носитель еще может быть в диапазоне > Отверстие (носитель) Мат мин и <= Отверстие (носитель) Мат макс. 	
			ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.ВалМат);
			
			Если ЗначениеНосителяИнструмента <> 0 Тогда
				РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюДиапазонНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.ОтверстиеНосительМат, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМин, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМакс);	
			КонецЕсли;
			
			Если РезультатПоиска.Количество() = 0 Тогда
				//	*** если ничего не нашли, то ищем по ВалМатКвадрат
				//	***	если ищем по "ВалМатКвадрат", то ОтверстиеНосительМатКвадрат может быть в диапазоне > ОтверстиеНосительМатМинКвадрат и <= ОтверстиеНосительМатМаксКвадрат 	
				ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.ВалМатКвадрат);
				
				Если ЗначениеНосителяИнструмента <> 0 Тогда
					РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюДиапазонНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатКвадрат, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМинКвадрат, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМаксКвадрат);	
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатПоиска.Количество() = 0 Тогда
				//	*** если ничего не нашли, то ищем по ВалМатШестигранник
				//	***	если ищем по "ВалМатШестигранник", то ОтверстиеНосительМатШестигранник может быть в диапазоне > ОтверстиеНосительМатМинШестигранник и <= ОтверстиеНосительМатМаксШестигранник 	
				ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.ВалМатШестигранник);
				
				Если ЗначениеНосителяИнструмента <> 0 Тогда
					РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюДиапазонНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатШестигранник, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМинШестигранник, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМаксШестигранник);	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
		
		Если РезультатПоиска.Количество() > 0 Тогда			
			ЭлементыФормы.ПанельПоиска.ТекущаяСтраница = ЭлементыФормы.ПанельПоиска.Страницы.РезультатПоиска;
		Иначе
			Предупреждение("Установка никуда невозможна!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//  *** Реализация алгоритма поиска вала для носителей
Процедура КоманднаяПанельСправочникСписокЧтоМожноУстановитьНаЭтотЭлемент(Кнопка)
	РезультатПоиска.Очистить();
	
	Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока <> Неопределено Тогда		
		текЭлем = ЭлементыФормы.СправочникСписок.ТекущаяСтрока.Ссылка;
		
		//	***	ЧТО можно установить - вал носитель / отверстие носитель (если заполнены оба то выдать ошибку - "Задано две посадки для установки НА ЭТОТ элемент")
		РезультатПроверки = МетодыИнструментов.ВыполнитьПроверкуКоличестваЗаполненныхПараметров(текЭлем, Перечисления.ЗначенияНосителя.ВалНоситель, Перечисления.ЗначенияНосителя.ОтверстиеНоситель);
		
		Если РезультатПроверки >= 2 Тогда
			Предупреждение("Задано две посадки для установки НА ЭТОТ элемент!");
			Возврат;
		ИначеЕсли РезультатПроверки = 1 Тогда
			//	***	по ним ищем инструменты вал / отверстие с таким же значением (если был ВалНоситель то ищем отверстие, т.е. наоборот) с таким же значением
			ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.ВалНоситель);
			Если ЗначениеНосителяИнструмента = 0 Тогда	
				ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.ОтверстиеНоситель);
				Если ЗначениеНосителяИнструмента <> 0 Тогда
					РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.Вал);			
				КонецЕсли;
			Иначе
				РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.Отверстие);			
			КонецЕсли;
		Иначе
			ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.ВалМат);
			
			Если ЗначениеНосителяИнструмента <> 0 Тогда
				РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюДиапазонНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.ОтверстиеНосительМат, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМин, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМакс);	
			КонецЕсли;
			
			Если РезультатПоиска.Количество() = 0 Тогда
				//	*** если ничего не нашли, то ищем по ВалМатКвадрат
				ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.ВалМатКвадрат);
				
				Если ЗначениеНосителяИнструмента <> 0 Тогда
					РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюДиапазонНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатКвадрат, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМинКвадрат, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМаксКвадрат);	
				КонецЕсли;
			КонецЕсли;
			
			Если РезультатПоиска.Количество() = 0 Тогда
				//	*** если ничего не нашли, то ищем по ВалМатШестигранник
				ЗначениеНосителяИнструмента = МетодыИнструментов.ПолучитьЗначениеПоИнструментуНоситель(текЭлем, Перечисления.ЗначенияНосителя.ВалМатШестигранник);
				
				Если ЗначениеНосителяИнструмента <> 0 Тогда
					РезультатПоиска = МетодыИнструментов.ПолучитьИнструментПоЗначениюДиапазонНоситель(ЗначениеНосителяИнструмента, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатШестигранник, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМинШестигранник, Перечисления.ЗначенияНосителя.ОтверстиеНосительМатМаксШестигранник);	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
		
		//	***	если никаких нет, тогда "Невозможно ничего установить"		
		Если РезультатПоиска.Количество() > 0 Тогда			
			ЭлементыФормы.ПанельПоиска.ТекущаяСтраница = ЭлементыФормы.ПанельПоиска.Страницы.РезультатПоиска;
		Иначе
			Предупреждение("Невозможно ничего установить!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
