Перем ТаблицаПрограмм, СтрокиДляСохраненияФайла;
Перем ВремяМашинное, ВремяФактическое, ВремяПростоя;

Функция Лог(Знач Икс)
	Если флОтладка Тогда
		Сообщить(Формат(ТекущаяДата(), "ДЛФ=T") + "|" + Строка(ТипЗнч(Икс)) + "|" + Строка(Икс));
	КонецЕсли;
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл Лога";
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Фильтр = "Файл Лог(*.LOG)|*.log";
	Диалог.ИндексФильтра = 2;
	Диалог.Каталог = "\\LOODSMANSERV\Stanki-logfile";
	Если Диалог.Выбрать() Тогда		
		ВремяМашинное = 0;
		ВремяФактическое = 0;
		ВремяПростоя = 0;
		ТаблицаПрограмм.Очистить();
		//ОчиститьСообщения();
		
		НазваниеФайла = СтрЗаменить(Диалог.ПолноеИмяФайла, Диалог.Каталог, "");		
		ОбойтиФайл(Диалог.ПолноеИмяФайла);		
		
		Если флОтладка Тогда
			ТаблицаПрограмм.ВыбратьСтроку();
		КонецЕсли;	
		
		СоздатьКонтрольнуюКарту(НазваниеФайла, Станок);
	КонецЕсли;	
КонецПроцедуры

Функция ОбойтиФайл(Знач Путь)
	Текст = Новый ЧтениеТекста(Путь, КодировкаТекста.UTF8);
	СтрокиДляСохраненияФайла.Очистить();	
	ПервичнаяВыборка = Новый Массив;
	ВторичнаяВыборка = Новый Массив;	
	СтрокаФайла = "";
	ВремяВключенияСтанка = "";
	ВремяОтключенияСтанка = "";
	ДатаПоиска = Формат(Дата, "ДФ=yyyy-MM-dd; ДЛФ=");
	
	//	просмотр файла для первичной выборки в разрезе дня
	Пока Истина Цикл
		СтрокаФайла = Текст.ПрочитатьСтроку();
		//Лог("> " + СтрокаФайла);
		Если СтрокаФайла = Неопределено Тогда
			Прервать;
		Иначе
			СтрокаФайла = СокрЛП(СтрокаФайла);
		КонецЕсли;	
		
		Если Найти(СтрокаФайла, ДатаПоиска) > 0 Тогда	
			Если ВремяВключенияСтанка = "" Тогда
				ВремяВключенияСтанка = Сред(СтрокаФайла, 12, 8);
			КонецЕсли;	
			ВремяОтключенияСтанка = Сред(СтрокаФайла, 12, 8);
			
			Если Найти(СтрокаФайла, "INFO") > 0 и ( Найти(СтрокаФайла, "Layer") > 0 или Найти(СтрокаФайла, "layer") > 0 или Найти(СтрокаФайла, "Phoenix rises") > 0 или Найти(СтрокаФайла, "End of run") > 0 ) Тогда
				ПервичнаяВыборка.Добавить(СтрокаФайла);
				СтрокиДляСохраненияФайла.Добавить(СтрокаФайла);
				//Лог("> " + СтрокаФайла);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//	проход первичной выборки для определения реального времени работы и печатных плат
	КомандаСтарт = "started for job";
	КомандаСтоп = "ended for job";	
	Для Каждого стр из ПервичнаяВыборка Цикл
		Если Найти(стр, КомандаСтарт) > 0 или Найти(стр, КомандаСтоп) > 0 Тогда
			ВторичнаяВыборка.Добавить(стр);
			Лог("> " + стр);	
		КонецЕсли;
	КонецЦикла;
	
	Для счетчик = 0 по ВторичнаяВыборка.Количество() - 2 Цикл
		стр1 = ВторичнаяВыборка[счетчик];
		стр2 = ВторичнаяВыборка[счетчик + 1];
		Если Найти(стр1, КомандаСтарт) > 0 и Найти(стр2, КомандаСтоп) > 0 Тогда
			ПрограммаСтарт = Прав(стр1, СтрДлина(стр1) - Найти(стр1, КомандаСтарт) - СтрДлина(КомандаСтарт));
			ПрограммаСтоп = Прав(стр2, СтрДлина(стр2) - Найти(стр2, КомандаСтоп) - СтрДлина(КомандаСтоп));
			Если ПрограммаСтарт = ПрограммаСтоп Тогда
				ИмяПрограммы = Лев(стр, Найти(ПрограммаСтарт, ", layer"));
				
				НоваяПрограмма = ТаблицаПрограмм.Добавить();
				НоваяПрограмма.Номер = ТаблицаПрограмм.Количество();
				НоваяПрограмма.ИмяПрограммы = ПрограммаСтарт;
				НоваяПрограмма.Количество = 1;
		
				ВремяСтарт = Сред(стр1, 12, 8);
				ВремяСтоп = Сред(стр2, 12, 8);

				НоваяПрограмма.ВремяНачалаРаботы = ПолучитьРазницуМеждуСтроками(ВремяСтарт);
				НоваяПрограмма.ВремяОкончанияРаботы = ПолучитьРазницуМеждуСтроками(ВремяСтоп);
				НоваяПрограмма.ВремяМашинное = ПолучитьРазницуМеждуСтроками(ВремяСтоп, ВремяСтарт);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если флОтладка Тогда
		ТаблицаПрограмм.ВыбратьСтроку();
	КонецЕсли;
	
	ВремТаб = ТаблицаПрограмм.Скопировать();
	ТаблицаПрограмм.Очистить();
	Для Каждого стр из ВремТаб Цикл
		ИмяПрограммы = Лев(стр.ИмяПрограммы, Найти(стр.ИмяПрограммы, ", layer") - 1);
		
		// *** для поиска так же может использоваться имя программы СЛОЯ
		ИмяПрограммыДополнительное = Прав(стр.ИмяПрограммы, СтрДлина(стр.ИмяПрограммы) - Найти(стр.ИмяПрограммы, "layer") - 5);
		Если Найти(ИмяПрограммыДополнительное, ".gbr") > 0 Тогда
			ИмяПрограммыДополнительное = Лев(ИмяПрограммыДополнительное, Найти(ИмяПрограммыДополнительное, ".gbr") - 1);
		КонецЕсли;
				
		НайдСтрока = ТаблицаПрограмм.Найти(ИмяПрограммы, "ИмяПрограммы");
		Если НайдСтрока = Неопределено Тогда
			НайдСтрока = ТаблицаПрограмм.Добавить();
			НайдСтрока.Номер = ТаблицаПрограмм.Количество();
			НайдСтрока.ИмяПрограммы = ИмяПрограммы;
			НайдСтрока.ПечатнаяПлата = ПолучитьСоответствиеДляУпрПрограммы(НайдСтрока.ИмяПрограммы);
			
			НайдСтрока.ТаблицаСлоев = Новый ТаблицаЗначений;
			НайдСтрока.ТаблицаСлоев.Колонки.Добавить("ПрограммаСлоя", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
			НайдСтрока.ТаблицаСлоев.Колонки.Добавить("ВремяНачалаРаботы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)));
			НайдСтрока.ТаблицаСлоев.Колонки.Добавить("ВремяОкончанияРаботы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)));
			НайдСтрока.ТаблицаСлоев.Колонки.Добавить("ВремяМашинное", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0)));
		КонецЕсли;
		НайдСтрока.Количество = НайдСтрока.Количество + стр.Количество;		
		НайдСтрока.ВремяНачалаРаботы = НайдСтрока.ВремяНачалаРаботы + стр.ВремяНачалаРаботы;
		НайдСтрока.ВремяОкончанияРаботы = НайдСтрока.ВремяОкончанияРаботы + стр.ВремяОкончанияРаботы;
		НайдСтрока.ВремяМашинное = НайдСтрока.ВремяМашинное + стр.ВремяМашинное;
		
		НовыйСлой = НайдСтрока.ТаблицаСлоев.Добавить();
		НовыйСлой.ПрограммаСлоя = стр.ИмяПрограммы;
		НовыйСлой.ВремяНачалаРаботы = стр.ВремяНачалаРаботы;
		НовыйСлой.ВремяОкончанияРаботы = стр.ВремяОкончанияРаботы;
		НовыйСлой.ВремяМашинное = стр.ВремяМашинное;
		НайдСтрока.ПлатМульт = ПолучитьПлатМульт(НайдСтрока.ПечатнаяПлата);
		
		Если НайдСтрока.ПечатнаяПлата = Справочники.НП.ПустаяСсылка() Тогда
			НайдСтрока.ПечатнаяПлата = ПолучитьСоответствиеДляУпрПрограммы(ИмяПрограммыДополнительное);
		КонецЕсли;
		
		ВремяМашинное = ВремяМашинное + стр.ВремяМашинное;
	КонецЦикла;
	
	ВремяФактическое = ПолучитьРазницуМеждуСтроками(ВремяОтключенияСтанка, ВремяВключенияСтанка);
	ВремяПростоя = 0;	
	Лог("Станок включили = " + ВремяВключенияСтанка);
	Лог("Станок отключили = " + ВремяОтключенияСтанка);
	Лог("Время Работы станка = " + ВремяФактическое);
КонецФункции

Функция ПолучитьСоответствиеДляУпрПрограммы(Знач Наименование)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ХранилищеУПДокументы.Ссылка.Дсе КАК НП
	|ИЗ
	|	Справочник.ХранилищеУП.Документы КАК ХранилищеУПДокументы
	|ГДЕ
	|	ХранилищеУПДокументы.Файл.Наименование ПОДОБНО &Наименование
	|	И ХранилищеУПДокументы.Файл.Расширение = ""GBR""";
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Лог(" >> " + Выборка.НП + " была найдена с использованием наименования УП = " + Наименование);
		Возврат Выборка.НП;
	Иначе
		Лог(" >> для " + Наименование + " не найдено НП в Хранилище!");
		Возврат Справочники.НП.ПустаяСсылка();
	КонецЕсли; 	
КонецФункции

Функция ПолучитьПлатМульт(Знач НП)	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТехпроцессыВертикали.Мультизаготовка,
	|	ТехпроцессыВертикали.КолвоМультизаготовок КАК ПлатМульт
	|ИЗ
	|	Справочник.ТехпроцессыВертикали КАК ТехпроцессыВертикали
	|ГДЕ
	|	ТехпроцессыВертикали.Дсе = &Плата
	|	И ТехпроцессыВертикали.Расчётный = 1";
	Запрос.УстановитьПараметр("Плата", НП);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПлатМульт;
	Иначе
		Возврат 1;
	КонецЕсли; 
Конецфункции

Функция ПолучитьРазницуМеждуСтроками(Знач СтрКонец, Знач СтрНачало = "00:00:00")	// Когда передают только СтрКонец, выполняет перевод в секунды
	СтрНачалоЧасы = Число(Лев(СтрНачало, 2));
	СтрНачалоМинуты = Число(Сред(СтрНачало, 4, 2));
	СтрНачалоСекунды = Число(Сред(СтрНачало, 7, 2));
	СтрНачалоВсего = СтрНачалоЧасы * 3600 + СтрНачалоМинуты * 60 + СтрНачалоСекунды;
	
	СтрКонецЧасы = Число(Лев(СтрКонец, 2));
	СтрКонецМинуты = Число(Сред(СтрКонец, 4, 2));
	СтрКонецСекунды = Число(Сред(СтрКонец, 7, 2));
	СтрКонецВсего = СтрКонецЧасы * 3600 + СтрКонецМинуты * 60 + СтрКонецСекунды;
	
	Возврат СтрКонецВсего - СтрНачалоВсего;
КонецФункции

Функция ПолучитьПараметрИзПараметровПП(Дсе, ТекЛитерал)
	ТекЛитералСпр = Справочники.ПараметрыПП.НайтиПоКоду(ТекЛитерал, Истина);
	Если ПустаяСтрока(ТекЛитералСпр) Тогда
		ВызватьИсключение "Неизвестный параметр: " + ТекЛитерал;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияПП.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ЗначенияПП КАК ЗначенияПП
	|ГДЕ
	|	ЗначенияПП.Нп = &НП
	|	И ЗначенияПП.Параметр = &Параметр";
	
	Запрос.УстановитьПараметр("НП", Дсе);
	Запрос.УстановитьПараметр("Параметр", ТекЛитералСпр);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Значение;
	КонецЕсли;
	
	Возврат 0;
КонецФункции

Функция ПолучитьНазваниеОперации(Знач НП)
	//	*** Операции для контроля ПП на АОЕ
	//	1) 33500 (ДПП, если количество слоев на ПП меньше или равно 2)
	//	2) 17520 (МПП для внутренних слоев)
	//	3) 33510 (МПП для наружных слоев)
	Операция = "";
	
	Если ПустаяСтрока(НП) Тогда
		Возврат Операция;
	Иначе
		КолСлоев = ПолучитьПараметрИзПараметровПП(НП, "КолСлоев");
		Если КолСлоев = 0 Тогда
			Возврат Операция;
		ИначеЕсли КолСлоев <= 2 Тогда	
			Операция = УточнитьНомерОперации(НП, "33500");
		ИначеЕсли КолСлоев > 2 Тогда
			Лог("" + НП + " является многослойней");
			ВнутреннийСлой = Истина;
			Для Каждого Стр из ТаблицаПрограмм.Найти(НП,"ПечатнаяПлата").ТаблицаСлоев Цикл
				ПрограммаСлоя = Стр.ПрограммаСлоя;
				НомерСлоя = 0;
				// берем текст справа от layer
				ПрограммаСлоя = Прав(ПрограммаСлоя, СтрДлина(ПрограммаСлоя) - Найти(ПрограммаСлоя, "layer") - 5);		
				// убираем расширение
				Если Найти(ПрограммаСлоя, ".gbr") > 0 Тогда
					ПрограммаСлоя = Лев(ПрограммаСлоя, Найти(ПрограммаСлоя, ".gbr") - 1);
				КонецЕсли;
				Если Найти(ПрограммаСлоя, ".gdo") > 0 Тогда
					ПрограммаСлоя = Лев(ПрограммаСлоя, Найти(ПрограммаСлоя, ".gdo") - 1);
				КонецЕсли;
				Если Найти(ПрограммаСлоя, "_sl") > 0 Тогда
					Попытка
						НомерСлоя = Число(СокрЛП(Прав(ПрограммаСлоя, СтрДлина(ПрограммаСлоя) - Найти(ПрограммаСлоя, "_sl") - 2)));
					Исключение
						НомерСлоя = 0;
					КонецПопытки;
				КонецЕсли;
				Если НомерСлоя = 1 Тогда
					ВнутреннийСлой = Ложь;
					Прервать;
				КонецЕсли;
				Лог("ПрограммаСлоя = " + ПрограммаСлоя);
				Лог("НомерСлоя = " + НомерСлоя);
				Лог("ВнутреннийСлой = " + ВнутреннийСлой);
			КонецЦикла;	
			Если ВнутреннийСлой Тогда
				Операция = УточнитьНомерОперации(НП, "17520");	
			Иначе
				Операция = УточнитьНомерОперации(НП, "33510");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Операция;
КонецФункции

Функция УточнитьНомерОперации(Знач НП, Знач Маска)
	НомерОперации = "";
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	техпроцессы.Ссылка
	|ПОМЕСТИТЬ врем
	|ИЗ
	|	Справочник.ТехПроцессы КАК техпроцессы
	|ГДЕ
	|	техпроцессы.НП = &НП
	|	И техпроцессы.Утвержден123
	|	И техпроцессы.СтатусТП = ЗНАЧЕНИЕ(Перечисление.СтатусТП.Действующий)
	|	И техпроцессы.ЗапускающийУчасток.Владелец = &Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врем.Ссылка КАК Ссылка,
	|	ТехПроцессыМаршрут.Номер КАК Номер,
	|	ТехПроцессыМаршрут.Наименование КАК Наименование
	|ИЗ
	|	врем КАК врем
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТехПроцессы.Маршрут КАК ТехПроцессыМаршрут
	|		ПО врем.Ссылка = ТехПроцессыМаршрут.Ссылка
	|			И (ТехПроцессыМаршрут.Номер ПОДОБНО &Маска)";
	Запрос.УстановитьПараметр("НП", НП);
	Запрос.УстановитьПараметр("Маска", Маска);
	Запрос.УстановитьПараметр("Владелец", Справочники.Цеха.НайтиПоКоду("218"));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НомерОперации = Выборка.Номер;
	КонецЕсли;
	
	Возврат НомерОперации;
КонецФункции

Процедура СоздатьКонтрольнуюКарту(Знач НазваниеФайла, Знач Станок)
	ВременныйКаталог = КаталогВременныхФайлов() + "stanki-log\";
	ПутьВременногоФайла = ВременныйКаталог + НазваниеФайла;
	Текст = Новый ЗаписьТекста(ПутьВременногоФайла, КодировкаТекста.UTF8);
	Для Каждого стр из СтрокиДляСохраненияФайла Цикл 
		Текст.ЗаписатьСтроку(стр);
	КонецЦикла;
	Текст.Закрыть();
	
	СпрФайл = Справочники.ХранилищеФайловКд.СоздатьЭлемент();
	СпрФайл.Источник = ПутьВременногоФайла;
	Сообщить(СпрФайл.Источник);
	СпрФайл.Тип = 6;
	СпрФайл.Записать();

	Позиции = "";
	Колво = 0;
	Смена = 1;
	
	КонтрКартаОбор = Документы.КонтрольнаяКартаОборудования.СоздатьДокумент();
	Для Каждого Стр Из Станок.РежимРаботы.Выгрузить() Цикл
		ЗаполнитьЗначенияСвойств(КонтрКартаОбор.Смены.Добавить(), Стр);
		КонтрКартаОбор.КолвоЧасов = КонтрКартаОбор.КолвоЧасов + Стр.ВремяРаботы;
	КонецЦикла;
	КонтрКартаОбор.Дата = Дата;
	КонтрКартаОбор.Оборудование = Станок;
	КонтрКартаОбор.ВидРабот = Станок.ВидРабот;
	КонтрКартаОбор.КолвоСмен = КонтрКартаОбор.Смены.Количество();
	КонтрКартаОбор.Участок = Станок.Участок;
	КонтрКартаОбор.Статус = 1;	
	КонтрКартаОбор.ЛогФайл = СпрФайл.Ссылка;
	
	Для Каждого Стр Из ТаблицаПрограмм Цикл
		НоваяДСЕ = КонтрКартаОбор.ДСЕ.Добавить();
		НоваяДСЕ.НП = Стр.ПечатнаяПлата;
		
		СекундНаОднуПлату = Окр(Стр.ВремяМашинное / (Стр.Количество * Стр.ПлатМульт), 1);
		ПлатВЧас = Окр(3600 / СекундНаОднуПлату, 1);
		
		МинутыВремяС = Цел(СекундНаОднуПлату / 60);
		СекундыВремяС = Окр(СекундНаОднуПлату - МинутыВремяС * 60, 0);	// нужно округлить, чтобы выводилось нормально
		
		МинутыВремяС = Строка(МинутыВремяС);
		Если СтрДлина(МинутыВремяС) = 0 Тогда
			МинутыВремяС = "00";
		ИначеЕсли СтрДлина(МинутыВремяС) = 1 Тогда
			МинутыВремяС = "0" + МинутыВремяС;
		КонецЕсли;

		СекундыВремяС = Строка(СекундыВремяС);	
		Если СтрДлина(СекундыВремяС) = 0 Тогда
			СекундыВремяС = "00";
		ИначеЕсли СтрДлина(СекундыВремяС) = 1 Тогда
			СекундыВремяС = "0" + СекундыВремяС;
		КонецЕсли;
		
		НоваяДСЕ.ВремяС = Дата("0001010100" + МинутыВремяС + СекундыВремяС);
		
		НоваяДСЕ.ВремяФакт = Окр(Стр.ВремяМашинное / 60);
		НоваяДСЕ.Смена = Смена;
		НоваяДСЕ.КолвоПлан = Стр.Количество * Стр.ПлатМульт;
		НоваяДСЕ.КолвоГодных = Стр.Количество * Стр.ПлатМульт;
		НоваяДСЕ.Операция = ПолучитьНазваниеОперации(НоваяДСЕ.НП);
		Позиции = Позиции + Стр.ИмяПрограммы + "; ";
		Колво = Колво + НоваяДСЕ.КолвоГодных;
	КонецЦикла;

	НоваяДСЕавтомат = КонтрКартаОбор.ДСЕавтомат.Добавить();
	НоваяДСЕавтомат.Смена = Смена;
	НоваяДСЕавтомат.Колво = Колво;
	НоваяДСЕавтомат.Машинное = Окр(ВремяМашинное / 60, 0);
	НоваяДСЕавтомат.Фактическое = Окр(ВремяФактическое / 60, 0);
	НоваяДСЕавтомат.Простой = Окр(ВремяПростоя / 60, 0);
	НайдСмена = КонтрКартаОбор.Смены.Найти(Смена, "Смена");
	Если НайдСмена <> Неопределено Тогда		
		НоваяДСЕавтомат.Выкл = Окр((НайдСмена.ВремяРаботы * 3600 - ВремяФактическое - ВремяПростоя) / 60, 0);	
		Если НоваяДСЕавтомат.Выкл < 0 Тогда
			НоваяДСЕавтомат.Выкл = 0;
		КонецЕсли;
	КонецЕсли;
	НоваяДСЕавтомат.Позиции = Позиции;
	
	Форма = КонтрКартаОбор.ПолучитьФорму();
	Форма.КоманднаяПанель1ПересчетВремени(Неопределено);
	Форма.Открыть();
КонецПроцедуры

Станок = Справочники.Оборудование.НайтиПоКоду("34382");
Дата = Дата('20170619');

СтрокиДляСохраненияФайла = Новый Массив;

ТаблицаПрограмм = Новый ТаблицаЗначений;
ТаблицаПрограмм.Колонки.Добавить("Номер", Новый ОписаниеТипов("Число"));
ТаблицаПрограмм.Колонки.Добавить("ТаблицаСлоев");
ТаблицаПрограмм.Колонки.Добавить("ПечатнаяПлата", Новый ОписаниеТипов("СправочникСсылка.НП"));
ТаблицаПрограмм.Колонки.Добавить("ИмяПрограммы",Новый ОписаниеТипов("Строка"));
ТаблицаПрограмм.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
ТаблицаПрограмм.Колонки.Добавить("ПлатМульт", Новый ОписаниеТипов("Число"));

ТаблицаПрограмм.Колонки.Добавить("ВремяНачалаРаботы", Новый ОписаниеТипов("Число"));
ТаблицаПрограмм.Колонки.Добавить("ВремяОкончанияРаботы", Новый ОписаниеТипов("Число"));
ТаблицаПрограмм.Колонки.Добавить("ВремяМашинное", Новый ОписаниеТипов("Число"));
